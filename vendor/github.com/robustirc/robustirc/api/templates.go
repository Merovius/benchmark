package api

// Generated by "go run gentmpl.go templates/header templates/footer templates/status templates/getmessage templates/sessions templates/state templates/statusirclog templates/irclog".
// Do not edit manually.

import (
	"html/template"
)

var templates = template.New("all")

func init() {
	template.Must(templates.New("templates/header").Parse(`<!-- vim:ts=2:sw=2:et
-->
<!DOCTYPE html>
<html>
  <head>
    <title>Status of RobustIRC node {{ .Addr }}</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha256-916EbMg70RQy9LHiGkXzG8hSg9EdNy97GazNG/aiY1w=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.11.0/bootstrap-table.min.css" integrity="sha256-eU4xmpfQx1HSi5q1q2rHNcMEzTNJov7r2Wr/6zF3ANc=" crossorigin="anonymous" />
  </head>
  <body>
  <nav class="navbar navbar-default">
    <div class="container-fluid">
      <!-- Brand and toggle get grouped for better mobile display -->
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1" aria-expanded="false">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="#">RobustIRC</a>
      </div>

      <div class="collapse navbar-collapse" id="navbar-collapse-1">
        <ul class="nav navbar-nav">
        {{ if eq .CurrentLink "/status" }}
          <li class="active"><a href="/status">Status <span class="sr-only">(current)</span></a></li>
        {{ else }}
          <li><a href="/status">Status</a></li>
        {{ end }}

        {{ if eq .CurrentLink "/status/getmessage" }}
          <li class="active"><a href="/status/getmessage">GetMessages <span class="badge" style="vertical-align: middle">{{ .GetMessageRequests | len }}</span><span class="sr-only">(current)</span></a></li>
        {{ else }}
          <li><a href="/status/getmessage">GetMessages <span class="badge" style="vertical-align: middle">{{ .GetMessageRequests | len }}</span></a></li>
        {{ end }}

        {{ if eq .CurrentLink "/status/sessions" }}
          <li class="active"><a href="/status/sessions">Sessions <span class="badge" style="vertical-align: middle">{{ .Sessions | len }}</span><span class="sr-only">(current)</span></a></li>
        {{ else }}
          <li><a href="/status/sessions">Sessions <span class="badge" style="vertical-align: middle">{{ .Sessions | len }}</span></a></li>
        {{ end }}

        {{ if eq .CurrentLink "/status/irclog" }}
          <li class="active"><a href="/status/irclog">IRCLog <span class="sr-only">(current)</span></a></li>
        {{ else }}
          <li><a href="/status/irclog">IRCLog</a></li>
        {{ end }}

        {{ if eq .CurrentLink "/status/state" }}
          <li class="active"><a href="/status/state">State <span class="sr-only">(current)</span></a></li>
        {{ else }}
          <li><a href="/status/state">State</a></li>
        {{ end }}
        </ul>

        <p class="navbar-text navbar-right">
          {{ .Addr }}
        </p>
      </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
  </nav>

  <div class="container">
`))
	template.Must(templates.New("templates/footer").Parse(`		</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.11.0/bootstrap-table.min.js" integrity="sha256-eXHLyyVI+v6X1wbfg9NB05IWqOqY4E9185nHZgeDIhg=" crossorigin="anonymous"></script>
<script type="text/javascript">
var lastChecked;

$(document).ready(function() {
	var boxes = $('input[type=checkbox]');
	boxes.click(function(e) {
		if (lastChecked === undefined) {
			lastChecked = this;
			return;
		}

		if (e.shiftKey) {
			var first = boxes.index(this);
			var last = boxes.index(lastChecked);

			var selected = boxes.slice(
				Math.min(first, last),
				Math.max(first, last) + 1)
			selected.prop('checked', lastChecked.checked);
		}

		lastChecked = this;
	});
});
</script>
	</body>
</html>
`))
	template.Must(templates.New("templates/status").Parse(`{{ template "templates/header" . }}
			<div class="row">
				<div class="col-sm-6">
					<h2>Node status</h2>
					<table class="table">
						<tbody>
							<tr>
								<th>State</th>
								<td>{{ .State }}</td>
							</tr>
							<tr>
								<th>Leader</th>
								<td><a href="https://{{ .Leader }}">{{ .Leader }}</a></td>
							</tr>
							<tr>
								<td class="col-sm-2 field-label"><label>Peers:</label></td>
								<td class="col-sm-10"><ul class="list-unstyled">
								{{ range .Peers }}
									<li><a href="https://{{ . }}">{{ . }}</a></li>
								{{ end }}
								</ul></td>
							</tr>
						</tbody>
					</table>

					<h2>Config</h2>
					<table class="table table-condensed table-striped">
						<tr>
							<th>SessionExpiration</th>
							<td>{{.NetConfig.SessionExpiration}}</td>
						</tr>
						<tr>
							<th>PostMessageCooloff</th>
							<td>{{.NetConfig.PostMessageCooloff}}</td>
						</tr>
						{{ range .NetConfig.IRC.Operators }}
						<tr>
							<th>IRC.Operators</th>
							<td>{{.Name}}/&lt;hidden&gt;</td>
						</tr>
						{{ end }}
						{{ range $auth, $name := .NetConfig.TrustedBridges }}
						<tr>
							<th>TrustedBridge</th>
							<td>{{ $name }}</td>
						</tr>
						{{ end }}
					</table>
				</div>

				<div class="col-sm-6">
					<h2>Raft Stats</h2>
					<table class="table table-condensed table-striped">
					{{ range $key, $val := .Stats }}
						<tr>
							<th>{{ $key }}</th>
							<td>{{ $val }}</td>
						</tr>
					{{ end }}
					</table>
				</div>
			</div>
{{ template "templates/footer" . }}
`))
	template.Must(templates.New("templates/getmessage").Parse(`{{ template "templates/header" . }}
			<div class="row">
				<h2>Active GetMessage requests <span class="badge" style="vertical-align: middle">{{ .GetMessageRequests | len }}</span></h2>
				<form action="/kill" method="post">
				<input type="submit" value="Kill selected sessions">
				<table class="table table-striped" data-toggle="table" data-sort-name="id">
					<thead>
						<tr>
							<th></th>
							<th data-field="id" data-sortable="true">Session ID</th>
							<th data-field="nick" data-sortable="true">Nick</th>
							<th data-field="remoteaddr" data-sortable="true">RemoteAddr</th>
							<th data-field="started" data-sortable="true">Started</th>
							<th data-field="useragent" data-sortable="true">User Agent</th>
						</tr>
					</thead>
					<tbody>
					{{ range $key, $val := .GetMessageRequests }}
						<tr>
							<td style="text-align: center"><input type="checkbox" style="position: static" name="session" value="{{ $val.Session.Id }}"></td>
							<td><code>{{ $val.Session.Id | printf "0x%x" }}</code></td>
							<td>{{ $val.NickWithFallback }}</td>
							{{ if ne $val.TrustedBridge "" }}
							<td><span title="{{ $val.RemoteAddr }}">{{ $val.TrustedBridge }}</span> â†’ {{ $val.ForwardedFor }}</td>
							{{ else }}
							<td><span title="{{ $val.ForwardedFor }} (UNTRUSTED!)">{{ $val.RemoteAddr }}</span></td>
							{{ end }}
							<td>{{ $val.StartedAndRelative }}</td>
							<td>{{ $val.UserAgent }}</td>
						</tr>
					{{ end }}
					</tbody>
				</table>
				</form>
			</div>
{{ template "templates/footer" . }}
`))
	template.Must(templates.New("templates/sessions").Parse(`{{ template "templates/header" . }}
			<div class="row">
				<h2>Active Sessions <span class="badge" style="vertical-align: middle">{{ .Sessions | len }}</span></h2>
				<form action="/kill" method="post">
				<input type="submit" value="Kill selected sessions">
				<table class="table table-striped" data-toggle="table" data-sort-name="id">
					<thead>
						<tr>
							<th></th>
							<th data-field="id" data-sortable="true">Session ID</th>
							<th data-field="lastactivity" data-sortable="true">Last Activity</th>
							<th data-field="nick" data-sortable="true">Nick</th>
							<th data-field="channels" data-sortable="true">Channels</th>
						</tr>
					</thead>
					<tbody>
						{{ range .Sessions }}
						<tr>
							<td class="col-sm-1" style="text-align: center"><input type="checkbox" name="session" value="{{ .Id.Id }}"> <a href="/irclog?sessionid={{ .Id.Id | printf "0x%x" }}"><span class="glyphicon glyphicon-list"></span></a></td>
							<td class="col-sm-2"><code>{{ .Id.Id | printf "0x%x" }}</code></td>
							<td class="col-sm-2">{{ .LastActivity }}</code></td>
							<td class="col-sm-2">{{ .Nick }}</td>
							<td class="col-sm-7">
							{{ range $key, $val := .Channels }}
							{{ $key }},
							{{ end }}
							</td>
						</tr>
						{{ end }}
					</tbody>
				</table>
				</form>
			</div>
{{ template "templates/footer" . }}
`))
	template.Must(templates.New("templates/state").Parse(`{{ template "templates/header" . }}
			<div class="row">
			  <a name="state"></a>
			  <h2>Server State</h2>

			  <pre>
			    {{- .ServerState -}}
			  </pre>
			</div>
{{ template "templates/footer" . }}
`))
	template.Must(templates.New("templates/statusirclog").Parse(`{{ template "templates/header" . }}
			<div class="row">
			    <a name="irclog"></a>
				<h2>IRC Log Entries (index={{ .First }} to index={{ .Last}})</h2>
				<a href="/status/irclog?offset={{ .PrevOffset }}#irclog">Prev</a>
				<a href="/status/irclog?offset={{ .NextOffset }}#irclog">Next</a>
				<table class="table table-striped">
					<thead>
						<tr>
							<th>Index</th>
							<th>Term</th>
							<th>Type</th>
							<th>Data</th>
						</tr>
					</thead>
					<tbody>
					{{ range .Entries }}
						<tr>
							<td class="col-sm-1">{{ .Index }}</td>
							<td class="col-sm-1">{{ .Term }}</td>
							<td class="col-sm-1">{{ .Type }}</td>
							<td class="col-sm-8"><code>{{ .Data | printf "%s" }}</code></td>
						</tr>
					{{ end }}
					</tbody>
                </table>
			</div>
{{ template "templates/footer" . }}
`))
	template.Must(templates.New("templates/irclog").Parse(`<!DOCTYPE html>
<html>
	<head>
		<title>IRC log</title>
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
	</head>
	<body>
		<div class="container-fluid">
			<div class="page-header">
				<h1>IRC log <small>{{ .Session.Id | printf "0x%x" }}</small></h1>
			</div>

			<div class="row">
				<table class="table table-striped table-condensed">
					<thead>
						<tr>
							<th>Message ID</th>
							<th>Time</th>
							<th>Text</th>
						</tr>
					</thead>
					<tbody>
						{{ range .Messages }}
						<tr>
							<td class="col-sm-2"><code>{{ .Id.Id }}.{{ .Id.Reply }}</code></td>
							<td class="col-sm-3">{{ .Timestamp }}</td>
							<td class="col-sm-7">
							{{ if eq .Id.Reply 0 }}
							<span class="glyphicon glyphicon-arrow-right"></span>
							{{ else }}
							<span class="glyphicon glyphicon-arrow-left"></span>
							{{ end }}
							<samp>{{ .PrivacyFilter }}</samp></td>
						</tr>
						{{ end }}
					</tbody>
				</table>
			</div>
		</div>
	</body>
</html>
`))
}
